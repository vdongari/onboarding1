{"ast":null,"code":"var _jsxFileName = \"/Users/vamshikrishna/Desktop/1onboarding/onboarding-flow-final/frontend/src/components/OnboardingFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { userAPI, configAPI } from '../services/api';\nimport StepIndicator from './StepIndicator';\nimport OnboardingStep from './OnboardingStep';\nimport SuccessPage from './SuccessPage'; // Added import for SuccessPage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OnboardingFlow = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [user, setUser] = useState(null);\n  const [configuration, setConfiguration] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showSuccess, setShowSuccess] = useState(false); // Added state for success page\n\n  useEffect(() => {\n    loadConfiguration();\n  }, []);\n  const loadConfiguration = async () => {\n    try {\n      const response = await configAPI.getConfiguration();\n      setConfiguration(response.data);\n    } catch (err) {\n      console.error('Failed to load configuration:', err);\n      // Fallback to default configuration if backend is not available\n      setConfiguration({\n        page2_components: ['about_me', 'birthdate'],\n        page3_components: ['address']\n      });\n    }\n  };\n  const handleStep1Submit = async formData => {\n    setLoading(true);\n    setError('');\n    try {\n      // Check if user already exists\n      try {\n        const existingUser = await userAPI.getUser(formData.email);\n        if (existingUser.data) {\n          setUser(existingUser.data);\n          setCurrentStep(existingUser.data.currentStep || 2);\n        }\n      } catch (err) {\n        // User doesn't exist, create new one\n        const newUser = await userAPI.register(formData);\n        setUser(newUser.data);\n        setCurrentStep(2);\n      }\n    } catch (err) {\n      console.error('Backend not available, using local state:', err);\n      // Fallback: create user object locally if backend is not available\n      const newUser = {\n        id: Date.now(),\n        email: formData.email,\n        password: formData.password,\n        currentStep: 2,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setUser(newUser);\n\n      // Save to localStorage for data table\n      const existingUsers = JSON.parse(localStorage.getItem('onboardingUsers') || '[]');\n      existingUsers.push(newUser);\n      localStorage.setItem('onboardingUsers', JSON.stringify(existingUsers));\n      setCurrentStep(2);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleStepSubmit = async stepData => {\n    if (!user) return;\n    setLoading(true);\n    setError('');\n    try {\n      const updateData = {\n        ...stepData,\n        currentStep: currentStep + 1\n      };\n      const updatedUser = await userAPI.updateUser(user.email, updateData);\n      setUser(updatedUser.data);\n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      } else {\n        // Onboarding complete - show success page\n        setShowSuccess(true);\n      }\n    } catch (err) {\n      console.error('Backend not available, using local state:', err);\n      // Fallback: update user object locally and save to localStorage\n      const updatedUser = {\n        ...user,\n        ...stepData,\n        currentStep: currentStep + 1,\n        id: user.id || Date.now(),\n        // Generate ID if not present\n        createdAt: user.createdAt || new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setUser(updatedUser);\n\n      // Save to localStorage for data table\n      const existingUsers = JSON.parse(localStorage.getItem('onboardingUsers') || '[]');\n      const userIndex = existingUsers.findIndex(u => u.email === user.email);\n      if (userIndex >= 0) {\n        existingUsers[userIndex] = updatedUser;\n      } else {\n        existingUsers.push(updatedUser);\n      }\n      localStorage.setItem('onboardingUsers', JSON.stringify(existingUsers));\n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      } else {\n        // Onboarding complete - show success page\n        setShowSuccess(true);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // Get components for current step based on admin configuration\n  const getComponentsForCurrentStep = () => {\n    if (!configuration) return [];\n    if (currentStep === 2) {\n      return configuration.page2Components || configuration.page2_components || [];\n    } else if (currentStep === 3) {\n      return configuration.page3Components || configuration.page3_components || [];\n    }\n    return [];\n  };\n  const resetOnboarding = () => {\n    setCurrentStep(1);\n    setUser(null);\n    setShowSuccess(false);\n    setError('');\n  };\n\n  // Show success page if onboarding is complete\n  if (showSuccess) {\n    return /*#__PURE__*/_jsxDEV(SuccessPage, {\n      user: user,\n      onReset: resetOnboarding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card floating\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"\\u2728 User Onboarding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StepIndicator, {\n        currentStep: currentStep,\n        totalSteps: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }, this), currentStep === 1 ? /*#__PURE__*/_jsxDEV(OnboardingStep, {\n        step: 1,\n        components: ['email', 'password'],\n        onSubmit: handleStep1Submit,\n        loading: loading,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(OnboardingStep, {\n        step: currentStep,\n        components: getComponentsForCurrentStep(),\n        onSubmit: handleStepSubmit,\n        onPrevious: handlePrevious,\n        loading: loading,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(OnboardingFlow, \"r8m1lmf3Jgl5vKP6tU84G5qICH4=\");\n_c = OnboardingFlow;\nexport default OnboardingFlow;\nvar _c;\n$RefreshReg$(_c, \"OnboardingFlow\");","map":{"version":3,"names":["React","useState","useEffect","userAPI","configAPI","StepIndicator","OnboardingStep","SuccessPage","jsxDEV","_jsxDEV","OnboardingFlow","_s","currentStep","setCurrentStep","user","setUser","configuration","setConfiguration","loading","setLoading","error","setError","showSuccess","setShowSuccess","loadConfiguration","response","getConfiguration","data","err","console","page2_components","page3_components","handleStep1Submit","formData","existingUser","getUser","email","newUser","register","id","Date","now","password","createdAt","toISOString","updatedAt","existingUsers","JSON","parse","localStorage","getItem","push","setItem","stringify","handleStepSubmit","stepData","updateData","updatedUser","updateUser","userIndex","findIndex","u","handlePrevious","getComponentsForCurrentStep","page2Components","page3Components","resetOnboarding","onReset","fileName","_jsxFileName","lineNumber","columnNumber","className","children","totalSteps","step","components","onSubmit","onPrevious","_c","$RefreshReg$"],"sources":["/Users/vamshikrishna/Desktop/1onboarding/onboarding-flow-final/frontend/src/components/OnboardingFlow.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { userAPI, configAPI } from '../services/api';\nimport StepIndicator from './StepIndicator';\nimport OnboardingStep from './OnboardingStep';\nimport SuccessPage from './SuccessPage'; // Added import for SuccessPage\n\nconst OnboardingFlow = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [user, setUser] = useState(null);\n  const [configuration, setConfiguration] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [showSuccess, setShowSuccess] = useState(false); // Added state for success page\n\n  useEffect(() => {\n    loadConfiguration();\n  }, []);\n\n  const loadConfiguration = async () => {\n    try {\n      const response = await configAPI.getConfiguration();\n      setConfiguration(response.data);\n    } catch (err) {\n      console.error('Failed to load configuration:', err);\n      // Fallback to default configuration if backend is not available\n      setConfiguration({\n        page2_components: ['about_me', 'birthdate'],\n        page3_components: ['address']\n      });\n    }\n  };\n\n  const handleStep1Submit = async (formData) => {\n    setLoading(true);\n    setError('');\n    \n    try {\n      // Check if user already exists\n      try {\n        const existingUser = await userAPI.getUser(formData.email);\n        if (existingUser.data) {\n          setUser(existingUser.data);\n          setCurrentStep(existingUser.data.currentStep || 2);\n        }\n      } catch (err) {\n        // User doesn't exist, create new one\n        const newUser = await userAPI.register(formData);\n        setUser(newUser.data);\n        setCurrentStep(2);\n      }\n    } catch (err) {\n      console.error('Backend not available, using local state:', err);\n      // Fallback: create user object locally if backend is not available\n      const newUser = {\n        id: Date.now(),\n        email: formData.email,\n        password: formData.password,\n        currentStep: 2,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setUser(newUser);\n      \n      // Save to localStorage for data table\n      const existingUsers = JSON.parse(localStorage.getItem('onboardingUsers') || '[]');\n      existingUsers.push(newUser);\n      localStorage.setItem('onboardingUsers', JSON.stringify(existingUsers));\n      \n      setCurrentStep(2);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleStepSubmit = async (stepData) => {\n    if (!user) return;\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const updateData = {\n        ...stepData,\n        currentStep: currentStep + 1\n      };\n\n      const updatedUser = await userAPI.updateUser(user.email, updateData);\n      setUser(updatedUser.data);\n      \n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      } else {\n        // Onboarding complete - show success page\n        setShowSuccess(true);\n      }\n    } catch (err) {\n      console.error('Backend not available, using local state:', err);\n      // Fallback: update user object locally and save to localStorage\n      const updatedUser = {\n        ...user,\n        ...stepData,\n        currentStep: currentStep + 1,\n        id: user.id || Date.now(), // Generate ID if not present\n        createdAt: user.createdAt || new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setUser(updatedUser);\n      \n      // Save to localStorage for data table\n      const existingUsers = JSON.parse(localStorage.getItem('onboardingUsers') || '[]');\n      const userIndex = existingUsers.findIndex(u => u.email === user.email);\n      \n      if (userIndex >= 0) {\n        existingUsers[userIndex] = updatedUser;\n      } else {\n        existingUsers.push(updatedUser);\n      }\n      \n      localStorage.setItem('onboardingUsers', JSON.stringify(existingUsers));\n      \n      if (currentStep < 3) {\n        setCurrentStep(currentStep + 1);\n      } else {\n        // Onboarding complete - show success page\n        setShowSuccess(true);\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  // Get components for current step based on admin configuration\n  const getComponentsForCurrentStep = () => {\n    if (!configuration) return [];\n    \n    if (currentStep === 2) {\n      return configuration.page2Components || configuration.page2_components || [];\n    } else if (currentStep === 3) {\n      return configuration.page3Components || configuration.page3_components || [];\n    }\n    return [];\n  };\n\n  const resetOnboarding = () => {\n    setCurrentStep(1);\n    setUser(null);\n    setShowSuccess(false);\n    setError('');\n  };\n\n  // Show success page if onboarding is complete\n  if (showSuccess) {\n    return <SuccessPage user={user} onReset={resetOnboarding} />;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"card floating\">\n        <h1 className=\"page-title\">✨ User Onboarding</h1>\n        \n        <StepIndicator currentStep={currentStep} totalSteps={3} />\n        \n        {error && <div className=\"error\">{error}</div>}\n        \n        {currentStep === 1 ? (\n          <OnboardingStep\n            step={1}\n            components={['email', 'password']}\n            onSubmit={handleStep1Submit}\n            loading={loading}\n            user={user}\n          />\n        ) : (\n          <OnboardingStep\n            step={currentStep}\n            components={getComponentsForCurrentStep()}\n            onSubmit={handleStepSubmit}\n            onPrevious={handlePrevious}\n            loading={loading}\n            user={user}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default OnboardingFlow;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}