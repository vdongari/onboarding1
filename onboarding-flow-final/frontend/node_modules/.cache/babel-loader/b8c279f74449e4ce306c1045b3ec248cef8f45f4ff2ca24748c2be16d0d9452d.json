{"ast":null,"code":"var _jsxFileName = \"/Users/vamshikrishna/Desktop/1onboarding/onboarding-flow-final/frontend/src/components/AdminPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { configAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminPanel = () => {\n  _s();\n  const [configuration, setConfiguration] = useState({\n    page2Components: [],\n    page3Components: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const availableComponents = [{\n    id: 'about_me',\n    label: 'About Me'\n  }, {\n    id: 'address',\n    label: 'Address'\n  }, {\n    id: 'birthdate',\n    label: 'Birthdate'\n  }];\n  useEffect(() => {\n    loadConfiguration();\n  }, []);\n  const loadConfiguration = async () => {\n    try {\n      const response = await configAPI.getConfiguration();\n      const data = response.data;\n      // Handle both camelCase and snake_case formats\n      setConfiguration({\n        page2Components: data.page2Components || data.page2_components || [],\n        page3Components: data.page3Components || data.page3_components || []\n      });\n    } catch (err) {\n      console.error('Failed to load configuration:', err);\n      setMessage('Failed to load configuration');\n    }\n  };\n  const handleComponentToggle = (pageNumber, componentId) => {\n    const pageKey = `page${pageNumber}Components`;\n    const currentComponents = configuration[pageKey] || [];\n    let newComponents;\n    if (currentComponents.includes(componentId)) {\n      // Remove component\n      newComponents = currentComponents.filter(id => id !== componentId);\n    } else {\n      // Add component\n      newComponents = [...currentComponents, componentId];\n    }\n    setConfiguration(prev => ({\n      ...prev,\n      [pageKey]: newComponents\n    }));\n  };\n  const handleSave = async () => {\n    // Validate that each page has at least one component\n    if (configuration.page2Components.length === 0) {\n      setMessage('Page 2 must have at least one component');\n      return;\n    }\n    if (configuration.page3Components.length === 0) {\n      setMessage('Page 3 must have at least one component');\n      return;\n    }\n    setLoading(true);\n    setMessage('');\n    try {\n      await configAPI.updateConfiguration(configuration);\n      setMessage('Configuration saved successfully!');\n    } catch (err) {\n      setMessage('Failed to save configuration');\n      console.error('Save error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderComponentSelector = pageNumber => {\n    const pageKey = `page${pageNumber}Components`;\n    const selectedComponents = configuration[pageKey] || [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Page \", pageNumber, \" Components\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Select which components should appear on page \", pageNumber, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"component-list\",\n        children: availableComponents.map(component => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `component-item ${selectedComponents.includes(component.id) ? 'selected' : ''}`,\n          onClick: () => handleComponentToggle(pageNumber, component.id),\n          children: component.label\n        }, component.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Selected:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 12\n        }, this), \" \", selectedComponents.length, \" component(s)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card floating\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: \"\\u2699\\uFE0F Admin Panel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"section-title\",\n        children: \"Configure which components appear on each page of the onboarding flow.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.includes('successfully') ? 'success' : 'error',\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), renderComponentSelector(2), renderComponentSelector(3), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '40px',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleSave,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this), \" Saving...\"]\n          }, void 0, true) : '💾 Save Configuration'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"admin-section\",\n        style: {\n          marginTop: '40px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"section-title\",\n          children: \"\\uD83D\\uDCCB Current Configuration Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Page 2:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 14\n          }, this), \" \", configuration.page2Components.join(', ') || 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Page 3:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 14\n          }, this), \" \", configuration.page3Components.join(', ') || 'None']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPanel, \"wMmrTEyYsqjSKjkwduPN5TUYpEw=\");\n_c = AdminPanel;\nexport default AdminPanel;\nvar _c;\n$RefreshReg$(_c, \"AdminPanel\");","map":{"version":3,"names":["React","useState","useEffect","configAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminPanel","_s","configuration","setConfiguration","page2Components","page3Components","loading","setLoading","message","setMessage","availableComponents","id","label","loadConfiguration","response","getConfiguration","data","page2_components","page3_components","err","console","error","handleComponentToggle","pageNumber","componentId","pageKey","currentComponents","newComponents","includes","filter","prev","handleSave","length","updateConfiguration","renderComponentSelector","selectedComponents","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","component","onClick","style","marginTop","textAlign","disabled","join","_c","$RefreshReg$"],"sources":["/Users/vamshikrishna/Desktop/1onboarding/onboarding-flow-final/frontend/src/components/AdminPanel.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { configAPI } from '../services/api';\n\nconst AdminPanel = () => {\n  const [configuration, setConfiguration] = useState({\n    page2Components: [],\n    page3Components: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const availableComponents = [\n    { id: 'about_me', label: 'About Me' },\n    { id: 'address', label: 'Address' },\n    { id: 'birthdate', label: 'Birthdate' }\n  ];\n\n  useEffect(() => {\n    loadConfiguration();\n  }, []);\n\n  const loadConfiguration = async () => {\n    try {\n      const response = await configAPI.getConfiguration();\n      const data = response.data;\n      // Handle both camelCase and snake_case formats\n      setConfiguration({\n        page2Components: data.page2Components || data.page2_components || [],\n        page3Components: data.page3Components || data.page3_components || []\n      });\n    } catch (err) {\n      console.error('Failed to load configuration:', err);\n      setMessage('Failed to load configuration');\n    }\n  };\n\n  const handleComponentToggle = (pageNumber, componentId) => {\n    const pageKey = `page${pageNumber}Components`;\n    const currentComponents = configuration[pageKey] || [];\n    \n    let newComponents;\n    if (currentComponents.includes(componentId)) {\n      // Remove component\n      newComponents = currentComponents.filter(id => id !== componentId);\n    } else {\n      // Add component\n      newComponents = [...currentComponents, componentId];\n    }\n    \n    setConfiguration(prev => ({\n      ...prev,\n      [pageKey]: newComponents\n    }));\n  };\n\n  const handleSave = async () => {\n    // Validate that each page has at least one component\n    if (configuration.page2Components.length === 0) {\n      setMessage('Page 2 must have at least one component');\n      return;\n    }\n    \n    if (configuration.page3Components.length === 0) {\n      setMessage('Page 3 must have at least one component');\n      return;\n    }\n\n    setLoading(true);\n    setMessage('');\n\n    try {\n      await configAPI.updateConfiguration(configuration);\n      setMessage('Configuration saved successfully!');\n    } catch (err) {\n      setMessage('Failed to save configuration');\n      console.error('Save error:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderComponentSelector = (pageNumber) => {\n    const pageKey = `page${pageNumber}Components`;\n    const selectedComponents = configuration[pageKey] || [];\n\n    return (\n      <div className=\"admin-section\">\n        <h3>Page {pageNumber} Components</h3>\n        <p>Select which components should appear on page {pageNumber}:</p>\n        \n        <div className=\"component-list\">\n          {availableComponents.map(component => (\n            <div\n              key={component.id}\n              className={`component-item ${selectedComponents.includes(component.id) ? 'selected' : ''}`}\n              onClick={() => handleComponentToggle(pageNumber, component.id)}\n            >\n              {component.label}\n            </div>\n          ))}\n        </div>\n        \n        <p><strong>Selected:</strong> {selectedComponents.length} component(s)</p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"card floating\">\n        <h1 className=\"page-title\">⚙️ Admin Panel</h1>\n        <p className=\"section-title\">Configure which components appear on each page of the onboarding flow.</p>\n        \n        {message && (\n          <div className={message.includes('successfully') ? 'success' : 'error'}>\n            {message}\n          </div>\n        )}\n        \n        {renderComponentSelector(2)}\n        {renderComponentSelector(3)}\n        \n        <div style={{ marginTop: '40px', textAlign: 'center' }}>\n          <button\n            className=\"btn\"\n            onClick={handleSave}\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"loading-spinner\"></span> Saving...\n              </>\n            ) : (\n              '💾 Save Configuration'\n            )}\n          </button>\n        </div>\n        \n        <div className=\"admin-section\" style={{ marginTop: '40px' }}>\n          <h3 className=\"section-title\">📋 Current Configuration Preview</h3>\n          <p><strong>Page 2:</strong> {configuration.page2Components.join(', ') || 'None'}</p>\n          <p><strong>Page 3:</strong> {configuration.page3Components.join(', ') || 'None'}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}